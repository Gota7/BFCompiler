//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BF.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="BFParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IBFListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BFParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInit([NotNull] BFParser.InitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BFParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInit([NotNull] BFParser.InitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Do_Loop</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_Loop([NotNull] BFParser.Do_LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Do_Loop</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_Loop([NotNull] BFParser.Do_LoopContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Move_Right</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMove_Right([NotNull] BFParser.Move_RightContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Move_Right</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMove_Right([NotNull] BFParser.Move_RightContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Move_Left</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMove_Left([NotNull] BFParser.Move_LeftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Move_Left</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMove_Left([NotNull] BFParser.Move_LeftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Increment</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncrement([NotNull] BFParser.IncrementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Increment</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncrement([NotNull] BFParser.IncrementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Decrement</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecrement([NotNull] BFParser.DecrementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Decrement</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecrement([NotNull] BFParser.DecrementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput([NotNull] BFParser.OutputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput([NotNull] BFParser.OutputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Input</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] BFParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Input</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] BFParser.InputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BFParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] BFParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BFParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] BFParser.LoopContext context);
}
