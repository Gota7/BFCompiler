//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BF.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BFParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IBFVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BFParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInit([NotNull] BFParser.InitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Do_Loop</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDo_Loop([NotNull] BFParser.Do_LoopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Move_Right</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMove_Right([NotNull] BFParser.Move_RightContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Move_Left</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMove_Left([NotNull] BFParser.Move_LeftContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Increment</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrement([NotNull] BFParser.IncrementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Decrement</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrement([NotNull] BFParser.DecrementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutput([NotNull] BFParser.OutputContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Input</c>
	/// labeled alternative in <see cref="BFParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] BFParser.InputContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BFParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoop([NotNull] BFParser.LoopContext context);
}
